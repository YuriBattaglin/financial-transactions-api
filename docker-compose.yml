services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - AWS_ENDPOINT=http://host.docker.internal:4566  # Alterado para host.docker.internal
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - LOCALSTACK_HOSTNAME=host.docker.internal  # Alterado para host.docker.internal
    extra_hosts:  # Adicionado para resolver o host.docker.internal
      - "host.docker.internal:host-gateway"
    depends_on:
      localstack:
        condition: service_healthy
    volumes:
      - ./:/app
      - /app/node_modules

  localstack:
    image: localstack/localstack
    network_mode: bridge  
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559"
    environment:
      - SERVICES=dynamodb,sqs,lambda,cloudformation,logs
      - DEFAULT_REGION=us-east-1
      - DEBUG=1
      - EDGE_PORT=4566
      - LOCALSTACK_HOST=0.0.0.0
      - LAMBDA_REMOTE_DOCKER=0
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME_EXTERNAL=localhost  
      - LOCALSTACK_HOSTNAME=localhost
    extra_hosts:
      - "host.docker.internal:host-gateway" 
    volumes:
      - ./localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 10s
      timeout: 5s
      retries: 5